function tifs=stitchAllChannels(chansToStitch,stitchedSize,combChans,illumChans)
% Stitch all channels within the current sample directory
%
% function tifs=stitchAllChannels(chansToStitch,stitchedSize,combChans,illumChans)
%
%
% Purpose
% Stitches all data from all channels within the current sample directory. 
% Before stitching, this function performs all required pre-processing and builds 
% new illumination images if needed. This is a convenience function. To stitch 
% particular channels or sections see the stitchSection function. 
%
%
% Inputs
% chansToStitch - which channels to stitch. By default it's all available channels. 
% stitchedSize - what size to make the final image. 100 is full size and is 
%              the default. 50 is half size. stitchedSize may be a vector with a
%              range of different sizes to produced. e.g. [25,50,100]
% combChans - the channels to use for comb correction if this hasn't already been done. 
%             by default it's the same as the channels to stitch. 
% illumChans - the channels to use for illumination correction if this hasn't 
%             already been done. By default it's the same a the chansToStich. 
%
%
% Rob Campbell - Basel 2017
%
%
% Also see: stitchSection, generateTileIndex, preProcessTiles, collateAverageImages



tifs=[]; %TODO: may remove this- see TODO in main loop


%Bail out if there is no raw data directory in the current directory
config=readStitchItINI;
if ~exist(config.subdir.rawDataDir,'dir')
    fprintf('%s can not find raw data directory "%s". Quitting\n', ... 
        mfilename, config.subdir.rawDataDir)
    return
end

%Bail out if we can't determin the acquisition system name
if determineStitchItSystemType<1
    %error message generated by determineStitchItSystemType
    return
end


% Check input arguments
if nargin<1
    chansToStitch=[];
end

if nargin<2 || isempty(stitchedSize)
    stitchedSize=100;
end

if nargin<3 || isempty(combChans)
    combChans=chansToStitch;
end

if nargin<4 || isempty(illumChans)
    illumChans=chansToStitch;
end


%See which channels we have to stitch
availableChans=[];
baseName=directoryBaseName;
sectionDirs = dir([config.subdir.rawDataDir,filesep,baseName,'*']);
if isempty(sectionDirs)
    fprintf('ERROR: No data directories found in %s. Quitting.\n',thisDir)
    return
end
tifs=dir(fullfile(config.subdir.rawDataDir,sectionDirs(1).name,'*.tif'));
switch determineStitchItSystemType %TODO: Determining the number of available channels this way is a bit shit
    case 'TissueCyte'
        for ii=1:length(tifs)
            tok=regexp(tifs(ii).name,'.*_(\d{2})\.tif','tokens');
            if isempty(tok)
                continue
            end
                availableChans=[availableChans,str2num(tok{1}{1})];
        end
    case 'BakingTray'
        for ii=1:length(tifs)
            tok=regexp(tifs(ii).name,'.*_chn(\d{1})\.tif','tokens');
            if isempty(tok)
                continue
            end
            availableChans=[availableChans,str2num(tok{1}{1})];
        end
end

if isempty(availableChans)
    fprintf('%s Could not find any channels to stitch.\n',mfilename)
    return
end

availableChans=unique(availableChans);


%Loop through and stitch all requested channels (or available channels)
if isempty(chansToStitch)
    doStitch(combChans,availableChans,availableChans,stitchedSize)
else
    doStitch(combChans,illumChans,chansToStitch,stitchedSize)
end



%------------------------------------------------------------------------------------------
function doStitch(combChans,illumChans,chansToStitch,stitchedSize)
    % doStitch - perform the stitching 

    generateTileIndex; %Ensure the tile index is present
    analysesPerformed = preProcessTiles(0,combChans,illumChans); %Ensure we have the pre-processing steps done
    if analysesPerformed.illumCor
        collateAverageImages
    end

    for thisChan=chansToStitch 
        stitchSection([],thisChan,'stitchedSize',stitchedSize) %Stitch all required channels
    end
